"""
Django settings for school_management project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-hd^_$u!6i09_i36zyyn&46p^5^4y%-tq=*r3gr7nggt!4))+dm'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'simple_history',
    'core.apps.CoreConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'school_management.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # Вот сюда добавляем путь
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True, # Оставляем True, чтобы Django искал шаблоны и внутри приложений
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'school_management.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

MEDIA_URL = '/media/' # URL-префикс для медиа файлов
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/') # Путь в файловой системе, где будут храниться загруженные файлы


# URL, на который перенаправлять после успешного входа (если не указан ?next=...)
LOGIN_REDIRECT_URL = '/' # Перенаправляем на главную страницу сайта

# URL, на который перенаправлять после выхода
LOGOUT_REDIRECT_URL = '/' # Тоже на главную

# ========== Настройки Celery ==========
# URL для подключения к брокеру сообщений (Redis)
# 'redis://localhost:6379/0' - стандартный адрес Redis на локальной машине, база данных 0
CELERY_BROKER_URL = 'redis://localhost:6380/0'

# URL для хранения результатов выполнения задач (тоже используем Redis)
CELERY_RESULT_BACKEND = 'redis://localhost:6380/0'

# Форматы принимаемого контента задач
CELERY_ACCEPT_CONTENT = ['json']
# Сериализатор для задач
CELERY_TASK_SERIALIZER = 'json'
# Сериализатор для результатов
CELERY_RESULT_SERIALIZER = 'json'
# Часовой пояс для Celery (важно для планирования задач)
# Используем тот же, что и в Django (TIME_ZONE = 'Asia/Almaty' или другой)
CELERY_TIMEZONE = TIME_ZONE
# ========== Конец Настроек Celery ==========

# --- Настройки Email (для теста выводим в консоль) ---
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
DEFAULT_FROM_EMAIL = 'noreply@school.test' # Укажем email отправителя по умолчанию



